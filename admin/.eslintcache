[{"C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\index.js":"1","C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\App.js":"2","C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\ProductAddEditPage\\index.js":"3","C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\ProductAddEditPage\\ProductAddEditPage.js":"4","C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\ProductListPage\\index.js":"5","C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\ProductListPage\\ProductListPage.js":"6","C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\shared\\product.api.js":"7"},{"size":327,"mtime":1607340916563,"results":"8","hashOfConfig":"9"},{"size":784,"mtime":1607425900963,"results":"10","hashOfConfig":"9"},{"size":39,"mtime":1607396566613,"results":"11","hashOfConfig":"9"},{"size":4890,"mtime":1607426006168,"results":"12","hashOfConfig":"9"},{"size":36,"mtime":1607411791620,"results":"13","hashOfConfig":"9"},{"size":2359,"mtime":1607521100062,"results":"14","hashOfConfig":"9"},{"size":2008,"mtime":1607425140746,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"79ecb7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\index.js",[],["32","33"],"C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\App.js",[],"C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\ProductAddEditPage\\index.js",[],"C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\ProductAddEditPage\\ProductAddEditPage.js",["34"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getProductInfo, addOrEditProduct } from \"../shared/product.api\";\r\n\r\nexport function ProductAddEditPage() {\r\n  const history = useHistory();\r\n  const { slugToWork } = useParams();\r\n  const [error, setError] = useState(false);\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      if (slugToWork) {\r\n        await addOrEditProduct(data, slugToWork);\r\n      } else {\r\n        await addOrEditProduct(data);\r\n      }\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n  };\r\n\r\n  const backToProductsList = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await getProductInfo(slugToWork);\r\n        const fields = [\"category\", \"name\", \"slug\", \"price\"];\r\n        fields.forEach((field) => setValue(field, data[field]));\r\n        setValue(\"image\", null);\r\n      } catch (e) {\r\n        setError(e.message);\r\n      }\r\n    };\r\n\r\n    if (slugToWork) {\r\n      fetchData();\r\n    } else {\r\n      const defaultValues = {\r\n        category: \"vegetables\",\r\n        slug: \"\",\r\n        name: \"\",\r\n        price: \"0\",\r\n        image: null,\r\n      };\r\n      Object.keys(defaultValues).forEach((key) =>\r\n        setValue(key, defaultValues[key])\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <h1>{error}</h1>\r\n        <button onClick={backToProductsList}>\r\n          Вернуться к списку продуктов\r\n        </button>\r\n      </>\r\n    );\r\n  } else\r\n    return (\r\n      <div className=\"container\">\r\n        {slugToWork ? (\r\n          <h1>Редактирование {slugToWork}</h1>\r\n        ) : (\r\n          <h1>Новый продукт</h1>\r\n        )}\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <label>\r\n            Категория:\r\n            <select ref={register} name=\"category\">\r\n              <option value=\"vegetables\">Овощи</option>\r\n              <option value=\"sauces\">Соусы</option>\r\n              <option value=\"meat\">Мясо</option>\r\n              <option value=\"cheese\">Сыры</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Наименование продукта:\r\n            <input\r\n              ref={register({\r\n                required: {\r\n                  value: true,\r\n                  message: \"Введите название продукта\",\r\n                },\r\n              })}\r\n              name=\"name\"\r\n            />\r\n            {errors.name && <span>{errors.name.message}</span>}\r\n          </label>\r\n          <label>\r\n            Идентификатор:\r\n            <input\r\n              ref={register({\r\n                required: {\r\n                  value: true,\r\n                  message: \"Введите идентификатор продукта\",\r\n                },\r\n                pattern: {\r\n                  value: /^[A-Za-z0-9_-]+$/i,\r\n                  message:\r\n                    \"Код должен содержать буквы, цифры, тире или подчеркивание\",\r\n                },\r\n              })}\r\n              name=\"slug\"\r\n            />\r\n            {errors.slug && <span>{errors.slug.message}</span>}\r\n          </label>\r\n          <label>\r\n            Цена:\r\n            <input\r\n              ref={register({\r\n                required: {\r\n                  value: true,\r\n                  message: \"Введите цену продукта\",\r\n                },\r\n                min: {\r\n                  value: 0,\r\n                  message: \"Цена не может быть меньше нуля\",\r\n                },\r\n                max: {\r\n                  value: 1000,\r\n                  message: \"Цена не может быть больше тысячи\",\r\n                },\r\n              })}\r\n              name=\"price\"\r\n              type=\"number\"\r\n            />\r\n            {errors.price && <span>{errors.price.message}</span>}\r\n          </label>\r\n          <label>\r\n            Картинка:\r\n            <input\r\n              ref={register({\r\n                required: {\r\n                  value: true,\r\n                  message: \"Загрузите изображение продукта\",\r\n                },\r\n              })}\r\n              name=\"image\"\r\n              type=\"file\"\r\n            />\r\n            {errors.image && <span>{errors.image.message}</span>}\r\n          </label>\r\n          <button>{slugToWork ? \"Обновить данные\" : \"Добавить продукт\"}</button>\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n","C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\ProductListPage\\index.js",[],"C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\ProductListPage\\ProductListPage.js",[],"C:\\Users\\ID\\WebstormProjects\\artem-pizza\\admin\\src\\shared\\product.api.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":57,"column":6,"nodeType":"41","endLine":57,"endColumn":8,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setValue' and 'slugToWork'. Either include them or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [setValue, slugToWork]",{"range":"48","text":"49"},[1549,1551],"[setValue, slugToWork]"]